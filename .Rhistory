rm(list=ls(all = T))
filename <- "uci_har_dataset.zip"
datadir <- paste0(getwd(), "/data/uci_har_dataset")
#Download and unzip dataset, if necessary
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename)
}
if (!file.exists(datadir)) {
unzip(filename, exdir = datadir)
}
datadir <- paste0(datadir, "/UCI HAR Dataset")
if (!file.exists(datadir)){
stop(paste0("Data directory is not exists: ", datadir))
}
#print(datadir)
# Load traning datasets
x_train <- read.table(paste0(datadir,"/train/X_train.txt"))
y_train <- read.table(paste0(datadir,"/train/y_train.txt"))
subject_train <- read.table(paste0(datadir,"/train/subject_train.txt"))
# Load test datasets
x_test <- read.table(paste0(datadir,"/test/X_test.txt"))
y_test <- read.table(paste0(datadir,"/test/y_test.txt"))
subject_test <- read.table(paste0(datadir,"/test/subject_test.txt"))
# Merge training and test datasets
x_merge <- rbind(x_train, x_test)
y_merge <- rbind(y_train, y_test)
subject_merge <- rbind(subject_train, subject_test)
# Load activity labels and features
activities <- read.table(paste0(datadir, "/activity_labels.txt"))
features <- read.table(paste0(datadir, "/features.txt"))
#Extract only mean and std dev features
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
x_merge <- x_merge[, mean_and_std_features]
# modify column names
#names(x_merge)
names(x_merge) <- features[mean_and_std_features, 2]
names(x_merge) <- tolower(names(x_merge))
#names(x_merge)
y_merge[, 1] <- activities[y_data[, 1], 2]
# modify column name
names(y_merge) <- "activity"
#modify column name
names(subject_merge) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_merge, y_merge, subject_merge)
#
averages_data <- ddply(all_data, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "tidy_data.txt", row.name=FALSE)
# Clean up workspace
rm(list=ls(all = T))
library(dplyr)
filename <- "uci_har_dataset.zip"
datadir <- paste0(getwd(), "/data/uci_har_dataset")
#Download and unzip dataset, if necessary
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename)
}
if (!file.exists(datadir)) {
unzip(filename, exdir = datadir)
}
datadir <- paste0(datadir, "/UCI HAR Dataset")
if (!file.exists(datadir)){
stop(paste0("Data directory is not exists: ", datadir))
}
#print(datadir)
# Load traning datasets
x_train <- read.table(paste0(datadir,"/train/X_train.txt"))
y_train <- read.table(paste0(datadir,"/train/y_train.txt"))
subject_train <- read.table(paste0(datadir,"/train/subject_train.txt"))
# Load test datasets
x_test <- read.table(paste0(datadir,"/test/X_test.txt"))
y_test <- read.table(paste0(datadir,"/test/y_test.txt"))
subject_test <- read.table(paste0(datadir,"/test/subject_test.txt"))
# Merge training and test datasets
x_merge <- rbind(x_train, x_test)
y_merge <- rbind(y_train, y_test)
subject_merge <- rbind(subject_train, subject_test)
# Load activity labels and features
activities <- read.table(paste0(datadir, "/activity_labels.txt"))
features <- read.table(paste0(datadir, "/features.txt"))
#Extract only mean and std dev features
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
x_merge <- x_merge[, mean_and_std_features]
# modify column names
#names(x_merge)
names(x_merge) <- features[mean_and_std_features, 2]
names(x_merge) <- tolower(names(x_merge))
#names(x_merge)
y_merge[, 1] <- activities[y_merge[, 1], 2]
# modify column name
names(y_merge) <- "activity"
#modify column name
names(subject_merge) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_merge, y_merge, subject_merge)
#
averages_data <- ddply(all_data, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "tidy_data.txt", row.name=FALSE)
# Clean up workspace
rm(list=ls(all = T))
library(plyr)
filename <- "uci_har_dataset.zip"
datadir <- paste0(getwd(), "/data/uci_har_dataset")
#Download and unzip dataset, if necessary
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename)
}
if (!file.exists(datadir)) {
unzip(filename, exdir = datadir)
}
datadir <- paste0(datadir, "/UCI HAR Dataset")
if (!file.exists(datadir)){
stop(paste0("Data directory is not exists: ", datadir))
}
#print(datadir)
# Load traning datasets
x_train <- read.table(paste0(datadir,"/train/X_train.txt"))
y_train <- read.table(paste0(datadir,"/train/y_train.txt"))
subject_train <- read.table(paste0(datadir,"/train/subject_train.txt"))
# Load test datasets
x_test <- read.table(paste0(datadir,"/test/X_test.txt"))
y_test <- read.table(paste0(datadir,"/test/y_test.txt"))
subject_test <- read.table(paste0(datadir,"/test/subject_test.txt"))
# Merge training and test datasets
x_merge <- rbind(x_train, x_test)
y_merge <- rbind(y_train, y_test)
subject_merge <- rbind(subject_train, subject_test)
# Load activity labels and features
activities <- read.table(paste0(datadir, "/activity_labels.txt"))
features <- read.table(paste0(datadir, "/features.txt"))
#Extract only mean and std dev features
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
x_merge <- x_merge[, mean_and_std_features]
# modify column names
#names(x_merge)
names(x_merge) <- features[mean_and_std_features, 2]
names(x_merge) <- tolower(names(x_merge))
#names(x_merge)
y_merge[, 1] <- activities[y_merge[, 1], 2]
# modify column name
names(y_merge) <- "activity"
#modify column name
names(subject_merge) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_merge, y_merge, subject_merge)
#
averages_data <- ddply(all_data, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "tidy_data.txt", row.name=FALSE)
gsub("(","", mean_and_std_features)
gsub("\(","", mean_and_std_features)
gsub("\\(","", mean_and_std_features)
names(x_merge)
gsub("\\(","", names(x_merge))
gsub("\\)","", names(x_merge))
gsub("\\(","", names(x_merge))
gsub("\\(\\)","", names(x_merge))
gsub("[\\)\\(\\-]","", names(x_merge))
names(x_merge) <- gsub("[\\)\\(\\-]","", names(x_merge))
names(x_merge)
names(x_merge) <- gsub("[\\)\\(\\-]","",features[mean_and_std_features, 2])
# Clean up workspace
rm(list=ls(all = T))
library(plyr)
filename <- "uci_har_dataset.zip"
datadir <- paste0(getwd(), "/data/uci_har_dataset")
#Download and unzip dataset, if necessary
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename)
}
if (!file.exists(datadir)) {
unzip(filename, exdir = datadir)
}
datadir <- paste0(datadir, "/UCI HAR Dataset")
if (!file.exists(datadir)){
stop(paste0("Data directory is not exists: ", datadir))
}
#print(datadir)
# Load traning datasets
x_train <- read.table(paste0(datadir,"/train/X_train.txt"))
y_train <- read.table(paste0(datadir,"/train/y_train.txt"))
subject_train <- read.table(paste0(datadir,"/train/subject_train.txt"))
# Load test datasets
x_test <- read.table(paste0(datadir,"/test/X_test.txt"))
y_test <- read.table(paste0(datadir,"/test/y_test.txt"))
subject_test <- read.table(paste0(datadir,"/test/subject_test.txt"))
# Merge training and test datasets
x_merge <- rbind(x_train, x_test)
y_merge <- rbind(y_train, y_test)
subject_merge <- rbind(subject_train, subject_test)
# Load activity labels and features
activities <- read.table(paste0(datadir, "/activity_labels.txt"))
features <- read.table(paste0(datadir, "/features.txt"))
#Extract only mean and std dev features
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
x_merge <- x_merge[, mean_and_std_features]
# modify column names
mean_and_std_features <- gsub("","", mean_and_std_features)
#names(x_merge)
names(x_merge) <- gsub("[\\)\\(\\-]","",features[mean_and_std_features, 2])
names(x_merge) <- tolower(names(x_merge))
#names(x_merge)
y_merge[, 1] <- activities[y_merge[, 1], 2]
# modify column name
names(y_merge) <- "activity"
#modify column name
names(subject_merge) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_merge, y_merge, subject_merge)
#
averages_data <- ddply(all_data, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "tidy_data.txt", row.name=FALSE)
names(x_merge)
head(x_merge)
all_data
head(all_data)
head(averages_data)
write.table(averages_data, "tidy_data.txt", row.name=FALSE)
write.table(averages_data, "tidy_data.txt", row.name=FALSE)
getwd()
